Metadata-Version: 2.1
Name: mle-training-bhujith
Version: 0.0.1
Summary: Helps you to predict housing prices using Random Forest model
Home-page: https://github.com/bhujithtiger/mle-training
Author: Bhujith Madav Velmurugan
Author-email: bhujith.velmurug@tigeranalytics.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown

# Median housing value prediction

Objective - We will be predicting the housing prices using machine learning models

## Datasets

The housing data can be downloaded from https://raw.githubusercontent.com/ageron/handson-ml/master/. The script has codes to download the data. We have modelled the median house value on given housing data.

## About the files and folders

    - src
        - This package contains the files to help us with our core objective of predicting housing prices

        - module

            - ingest_data.py
                - Run this file to download the tar file from the internet, extract the csv file and load it in the dataframe followed by preprocessing and splitting it into training and testing sets

            - train.py
                - Run this file to build and train the Random Forest Regressor model followed by saving the model.

            - score.py
                - Run this file to make predictions using the model saved during the previous step.

        - tests

            - tests.py
                - Run this file to conduct unit tests to validate the functionalities of some functions in the src package.

    - logs
        - This folder contains the logs generated as part of achieving our objective of predicting housing prices.

    - models
        - This folder contains the models generated during the model building process saved as pickle files

    - encoders
        - This folder contains the one hot encoders used for transforming the categorical columns

    - results
        - This folder contains the predictions generated as part of the scoring process and saved as csv files.

## To run the script
 - Install Miniconda
 - Create a conda environment
 - Activate the environment
 - Install the required packages
 - Create env.yml file
 - Execute the python script

## Corresponding commands

```shell
conda create --name mle-dev

conda activate mle-dev

conda install <package-names>

conda env export > env.yml

python <script-name>
```

